{
  "name": "K2flix",
  "tagline": "Kepler/K2/TESS pixel data visualizer",
  "body": "K2flix: Kepler/K2/TESS pixel data visualizer\r\n============================================\r\n\r\n**Create quicklook movies from the pixels observed by NASA's\r\nKepler/K2/TESS spacecraft.**\r\n\r\n[![PyPI](http://img.shields.io/pypi/v/k2flix.svg)](https://pypi.python.org/pypi/k2flix/)\r\n[![Travis status](http://img.shields.io/travis/barentsen/k2flix/master.svg)](http://travis-ci.org/barentsen/k2flix)\r\n[![MIT license](http://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/barentsen/k2flix/blob/master/LICENSE)\r\n[![DOI](https://zenodo.org/badge/doi/10.5281/zenodo.15576.svg)](http://dx.doi.org/10.5281/zenodo.15576)\r\n[![ADS Bibcode](https://img.shields.io/badge/NASA%20ADS-2015ascl.soft03001B-blue.svg)](http://adsabs.harvard.edu/abs/2015ascl.soft03001B)\r\n\r\nK2flix makes it easy to inspect the CCD pixel data obtained by NASA's\r\n[Kepler space telescope](http://keplerscience.nasa.gov), or simulated\r\ndata from the future [TESS space telescope](https://tess.gsfc.nasa.gov).\r\n\r\nThe need for this tool arised from the fact that the two-wheeled\r\nextended Kepler mission, K2, is affected by new sources of noise --\r\nincluding pointing jitter and foreground asteroids --which are more\r\neasily spotted by eye than by algorithm.\r\n\r\nThis tool takes Kepler's *Target Pixel Files (TPF)* as input and turns\r\nthem into contrast-stretched animated gifs or MPEG-4 movies. These *TPF\r\nfiles* are publically available from the [Kepler\r\narchive](https://archive.stsci.edu/missions/kepler/target_pixel_files/)\r\nand the [K2\r\narchive](https://archive.stsci.edu/missions/k2/target_pixel_files/).\r\n\r\nK2flix can be used both as a command-line tool or using its Python API.\r\n\r\nExample\r\n-------\r\n\r\nAsteroids commonly pass in front of Kepler/K2 targets. We can use k2flix\r\nto create a two-day animation of pixel data to count the number of\r\nasteroids whizzing past:\r\n\r\n    $ k2flix --start 545 --stop 680 --step 1 --fps 12 http://archive.stsci.edu\\\r\n    /missions/k2/target_pixel_files/c1/201500000/72000/ktwo201572338-c01_lpd-targ.fits.gz\r\n\r\n![k2flix output example](https://raw.githubusercontent.com/barentsen/k2flix/master/examples/epic-201572338.gif)\r\n\r\nTo see many more examples, follow\r\n[@KeplerBot](https://twitter.com/KeplerBot) on Twitter!\r\n\r\nInstallation\r\n------------\r\n\r\nIf you have a working installation of Python on your system, you can\r\ninstall k2flix using pip:\r\n\r\n    $ pip install k2flix\r\n\r\nAlternatively, you can get the latest version by installing from source:\r\n\r\n    $ git clone https://github.com/barentsen/k2flix.git\r\n    $ cd k2flix\r\n    $ python setup.py install\r\n\r\nK2flix has been tested under Linux. Get in touch if you encounter issues\r\non OS X or Windows.\r\n\r\nUsing k2flix\r\n------------\r\n\r\nAfter installation, the k2flix tool will be available on the command\r\nline. You can then use it as follows.\r\n\r\nConverting a Kepler pixel file to an animated gif:\r\n\r\n    $ k2flix tpf-file.fits.gz\r\n\r\nConverting a Kepler pixel file to an MPEG-4 movie:\r\n\r\n    $ k2flix -o movie.mp4 tpf-file.fits.gz\r\n\r\nK2flix supports reading from web URLs, so you can generate a movie\r\ndirectly from the data archive:\r\n\r\n    $ k2flix https://archive.stsci.edu/missions/k2/target_pixel_files/c1/201400000/00000/ktwo201400022-c01_lpd-targ.fits.gz\r\n\r\nTo see all the options, use the --help argument to see the full usage\r\ninformation:\r\n\r\n    $ k2flix --help\r\n    usage: k2flix [-h] [-v] [--output FILENAME] [--start START] [--stop STOP]\r\n                  [--step STEP] [--fps FPS] [--binning BINNING] [--dpi DPI]\r\n                  [--stretch STRETCH] [--min_cut MIN_CUT] [--max_cut MAX_CUT]\r\n                  [--min_percent %] [--max_percent %] [--cmap CMAP] [--flags]\r\n                  [--raw | --background | --cosmic]\r\n                  [--ut | --jd | --mjd | --bkjd | --cadence]\r\n                  tpf_filename [tpf_filename ...]\r\n\r\n    Converts a Target Pixel File (TPF) from NASA's Kepler/K2/TESS spacecraft into\r\n    an animated gif or MPEG-4 movie for human inspection.\r\n\r\n    positional arguments:\r\n      tpf_filename       path to one or more Target Pixel Files (TPF)\r\n\r\n    optional arguments:\r\n      -h, --help         show this help message and exit\r\n      -v, --verbose\r\n      --output FILENAME  .gif or .mp4 output filename (default: gif with the same\r\n                         name as the input file)\r\n      --start START      first frame to show. Give the frame number (default 0),\r\n                         or a Julian Day if --jd/--mjd is set, or a cadence number\r\n                         if --cadence is set.\r\n      --stop STOP        final frame to show. Give the frame number (default: -1),\r\n                         or a Julian Day if --jd/--mjd is set, or a cadence number\r\n                         if --cadence is set.\r\n      --step STEP        spacing between frames (default: show 100 frames)\r\n      --fps FPS          frames per second (default: 15)\r\n      --binning BINNING  number of cadence to co-add per frame (default: 1)\r\n      --dpi DPI          resolution of the output in dots per K2 pixel (default:\r\n                         choose a dpi that produces a 440px-wide image)\r\n      --stretch STRETCH  type of contrast stretching: \"linear\", \"sqrt\", \"power\",\r\n                         \"log\", or \"asinh\" (default is \"log\")\r\n      --min_cut MIN_CUT  minimum cut level (default: use min_percent)\r\n      --max_cut MAX_CUT  maximum cut level (default: use max_percent)\r\n      --min_percent %    minimum cut percentile (default: 1.0)\r\n      --max_percent %    maximum cut percentile (default: 95)\r\n      --cmap CMAP        matplotlib color map name (default: gray)\r\n      --flags            show the quality flags\r\n      --raw              show the uncalibrated pixel counts ('RAW_CNTS')\r\n      --background       show the background flux ('FLUX_BKG')\r\n      --cosmic           show the cosmic rays ('COSMIC_RAYS')\r\n      --ut               use Universal Time\r\n      --jd               use Julian Day for annotation and --start/--stop\r\n      --mjd              use Modified Julian Day for annotation and --start/--stop\r\n      --bkjd             use Kepler Julian Day for annotation and --start/--stop\r\n      --cadence          use Cadence Number for annotation and --start/--stop\r\n\r\nCiting\r\n------\r\n\r\nThis tool was created by Geert Barentsen at NASA's Kepler/K2 Guest\r\nObserver Office. If this tool aided your research, please include a\r\ncitation. The code has been registered in the Astrophysics Source Code\r\nLibrary \\[[ascl:1503.001](http://ascl.net/code/v/1069)\\] and the\r\npreferred BibTeX entry is:\r\n\r\n    @MISC{2015ascl.soft03001B,\r\n      author        = {{Barentsen}, G.},\r\n      title         = \"{K2flix: Kepler pixel data visualizer}\",\r\n      howpublished  = {Astrophysics Source Code Library},\r\n      year          = 2015,\r\n      month         = mar,\r\n      archivePrefix = \"ascl\",\r\n      eprint        = {1503.001},\r\n      adsurl        = {http://adsabs.harvard.edu/abs/2015ascl.soft03001B},\r\n      adsnote       = {Provided by the SAO/NASA Astrophysics Data System},\r\n      doi           = {10.5281/zenodo.15576},\r\n      url           = {http://dx.doi.org/10.5281/zenodo.15576}\r\n    }\r\n\r\nContributing\r\n------------\r\n\r\nTo report bugs and request features, please use the [issue\r\ntracker](https://github.com/barentsen/k2flix/issues). Code contributions\r\nare very welcome.\r\n\r\nLicense\r\n-------\r\n\r\nCopyright 2016 Geert Barentsen. K2flix is free software made available\r\nunder the MIT License. For details see the LICENSE file.\r\n",
  "google": "UA-69171-6",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}